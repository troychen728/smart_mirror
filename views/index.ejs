<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>AmazonLex</title>
    <meta name="author" content="lafranch">
    <meta name="description" content="Lex Runtime example from the browser.">
    <meta name="keywords" content="Amazon Lex, SDK, Runtime, Browser, JavaScript">
    <link rel="icon" type="image/png" href="images/favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="images/favicon-16x16.png" sizes="16x16" />

    <link rel="stylesheet" href="css/style.css">

    <!-- Modal -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/izimodal/1.5.1/css/iziModal.min.css">

    <!-- Calendar Widget -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.6.2/fullcalendar.min.css">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="vendor/font-awesome-4.7.0/css/font-awesome.min.css">

    <link rel="stylesheet" href="vendor/weather/weather_css.css">

    <!-- Leap Motion related CSS -->
    <style type="text/css">
      #pointer {
        z-index: 999999999999;
      }
      .fa-hand-spock-o {
        position: absolute;
        color: white;
        z-index: 999999999999;
      }
    </style>

    <style type="text/css">
        #game-container {
            margin: 0;
            padding: 0;
            display: block;
        }
    </style>
</head>

<body class="wrapper" id="app-container">
    <!-- Modal structure -->
    <div id="modal">
        <div id="modal-containers">
            <div id='calendar-container'></div>
            <div id='weather-container'></div>
            <div id='stock-container'></div>
            <div id='map-container'></div>
            <canvas id='game-container' width="600" height="400" style="overflow: hidden; margin: 0"></canvas>
        </div>
    </div>

    <div class="audio-control">
        <p id="audio-control">
            <canvas class="visualizer"></canvas>
        </p>
        <p><span id="message"></span></p>
    </div>

    <div id="firework-container" style="margin: 0px;"></div>

    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.48.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"
            integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
            crossorigin="anonymous"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js'></script>

    <script src="scripts/main.js" type="text/javascript"></script>

    <!-- Modal -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/izimodal/1.5.1/js/iziModal.min.js"></script>

    <!-- Calendar Widget -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.6.2/fullcalendar.min.js"></script>
    <script src="vendor/fullcalendar/gcal.js" type="text/javascript"></script>

     <!-- Weather Widget -->
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.simpleWeather/3.1.0/jquery.simpleWeather.min.js"></script> 
     <script src="vendor/weather/jquery.simpleWeather.min.js" type="text/javascript"></script>
       
    <!-- clock widget --> 
    <div style="text-align:center;padding:1em 0;"> 
            <h2><span style="color:black;">/h2> <iframe src="https://www.zeitverschiebung.net/clock-widget-iframe-v2?language=en&size=large&timezone=America%2FLos_Angeles" width="100%" height="140" frameborder="0" seamless></iframe> 
    </div>

    <!-- Firework Widget -->
    <script src="scripts/firework.js" type="text/javascript"></script>

    <script type="text/javascript">
    window.lexaudio = {};
    window.currentInput = {};
    window.recordingStarted = false;
    window.shouldStopRecording = false;

    window.ACCESS_KEY_ID = "<%= access_key %>";
    window.SECRET_KEY = "<%= secret_key %>";
    </script>
    <script src="scripts/control.js" type="text/javascript"></script>
    <script src="scripts/recorder.js" type="text/javascript"></script>
    <script src="scripts/renderer.js" type="text/javascript"></script>
    <script src="scripts/conversation.js" type="text/javascript"></script>
    <script type="text/javascript">
    if (window.addEventListener) window.addEventListener("load", new lexaudio.example(), false);
    else if (window.attachEvent) window.attachEvent("onload", setup(new lexaudio.example()));
    else window.onload = new lexaudio.example();
    </script>

    <!-- Pointer for Leap Motion -->
    <div id="pointer">
        <i class="fa fa-hand-spock-o fa-3x"></i>
        <!-- <span style="color: white">test</span> -->
    </div>

    <!-- Leap motion related scripts -->
    <script src="http://js.leapmotion.com/leap-0.6.3.js"></script>
    <script>
        // Setup Leap loop with frame callback function
        var controllerOptions = {enableGestures: true};

        Leap.loop(controllerOptions, function(frame) {
          if (frame.pointables.length > 0) {
            var iBox = frame.interactionBox;
            var finger = frame.pointables[0];
            var leapPoint = finger.stabilizedTipPosition;
            var normalizedPoint = iBox.normalizePoint(leapPoint, true);

            var appWidth = 1080;
            var appHeight = 1920;

            var appX = normalizedPoint[0] * appWidth;
            var appY = (1 - normalizedPoint[1]) * appHeight;
            setPointerLocation(appX, appY);
          }

          var gestureOutput = document.getElementById("gestureData");
          if (frame.gestures.length > 0) {
            for(var i = 0; i < frame.gestures.length; i++) {
              var gesture = frame.gestures[i];
              switch (gesture.type) {
                case "circle":
                  if (gesture.radius.toFixed(1) > 20 && gesture.progress.toFixed(2) > 0.5) {
                    console.log("Circle radius ", gesture.radius.toFixed(1), " Circle progress ", gesture.progress.toFixed(2))
                    activateListener();
                  }
                  break;
                case "swipe":
                  var directionX = gesture.direction[0];
                  var directionY = gesture.direction[1];
                  if (Math.abs(directionX) < 0.8 && Math.abs(directionY) < 0.8) {
                    break;
                  }
                  if (Math.abs(directionX) > Math.abs(directionY)) {
                    console.log("directionX ", directionX)
                    if (directionX > 0) { // Right
                        swipeRightAction()
                    } else { // Left
                        swipeLeftAction()
                    }
                  } else {
                    console.log("directionY ", directionY)
                    if (directionY > 0) { // Up
                        swipeUpAction()
                    } else { // Down
                        swipeDownAction()
                    }
                  }
                  break;
                case "keyTap":
                  break;
                case "screenTap":
                  break;
                default:
                  break;
              }
            }
          }
        });

        function activateListener(){
          console.log("Called the circle gesture");
          document.getElementById("audio-control").click();
          window.recordingStarted = true;
        }

        function swipeLeftAction() {
            console.log("Called the swipe left gesture");
        }

        function swipeRightAction() {
            console.log("Called the swipe right gesture");
        }

        function swipeUpAction() {
            console.log("Called the swipe up gesture");
            clearModal();
        }

        function swipeDownAction() {
            if (window.recordingStarted) {
              window.shouldStopRecording = true;
            }
        }

        function setPointerLocation(x,y) {
          // console.log("Called ", x, y);
          var pointer = document.getElementById('pointer');
          var pointerParent = pointer.parentNode;
          pointerParent.removeChild(pointer);
          var newPointer = createNewPointer(x,y);
          pointerParent.appendChild(newPointer);
        }

        function createNewPointer(x,y) {
          var newPointer = document.createElement("DIV");
          newPointer.id = "pointer";
          newPointer.style.position = "absolute";
          newPointer.style.left = x+'px';
          newPointer.style.top = y+'px';
          var newIcon = document.createElement("I");
          newIcon.classList.add('fa');
          newIcon.classList.add("fa-hand-spock-o");
          newIcon.classList.add("fa-3x");
          newPointer.appendChild(newIcon);
          return newPointer;
        }

        function vectorToString(vector, digits) {
          if (typeof digits === "undefined") {
            digits = 1;
          }
          return "(" + vector[0].toFixed(digits) + ", "
                     + vector[1].toFixed(digits) + ", "
                     + vector[2].toFixed(digits) + ")";
        }
    </script>
</body>

</html>